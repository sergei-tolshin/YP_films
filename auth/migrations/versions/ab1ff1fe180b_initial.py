"""initial
Revision ID: ab1ff1fe180b
Revises:
Create Date: 2022-03-26 13:52:10.664733
"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ab1ff1fe180b'
down_revision = None
branch_labels = None
depends_on = None
platforms = sa.Enum('pc', 'mobile', 'tablet', name='platformenum')


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'roles',
        sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('name', sa.String(length=255), nullable=True),
        sa.Column('permission_level', sa.Integer(), nullable=True, default=1),
        sa.PrimaryKeyConstraint('uuid'),
        sa.UniqueConstraint('name')
    )
    op.create_table(
        'users',
        sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('username', sa.String(length=255), nullable=True),
        sa.Column('password_hash', sa.String(length=512), nullable=True),
        sa.Column('first_name', sa.String(length=255), nullable=True),
        sa.Column('last_name', sa.String(length=255), nullable=True),
        sa.Column('email', sa.String(length=255), nullable=True),
        sa.Column('birth_date', sa.Date(), nullable=True),
        sa.Column('superuser', sa.Boolean(), nullable=True),
        sa.Column('time_zone', sa.SmallInteger(), nullable=True),
        sa.Column('notification', sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint('uuid'),
        sa.UniqueConstraint('email'),
        sa.UniqueConstraint('username')
    )
    op.create_table(
        'social_account',
        sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('social_id', sa.Text(), nullable=False),
        sa.Column('social_name', sa.Text(), nullable=False),
        sa.ForeignKeyConstraint(['user_id'], ['users.uuid'], ),
        sa.PrimaryKeyConstraint('uuid'),
        sa.UniqueConstraint('social_id', 'social_name', name='social_pk')
    )
    op.create_table(
        'user_history',
        sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('user', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('timestamp', sa.DateTime(), nullable=False),
        sa.Column('device', sa.String(length=255), nullable=True),
        sa.Column('platform', platforms, server_default='pc', nullable=False),
        sa.Column('location', sa.String(length=255), nullable=True),
        postgresql_partition_by='LIST (platform)'
    )
    op.create_table(
        'user_roles',
        sa.Column('user_uuid', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('role_uuid', postgresql.UUID(as_uuid=True), nullable=False),
        sa.ForeignKeyConstraint(['role_uuid'], ['roles.uuid'], ),
        sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], ),
        sa.PrimaryKeyConstraint('user_uuid', 'role_uuid'),
        sa.UniqueConstraint('user_uuid', 'role_uuid')
    )


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_roles')
    op.drop_table('user_history')
    op.drop_table('social_account')
    op.drop_table('users')
    op.drop_table('roles')
    # ### end Alembic commands ###
